"""remove_matching

Revision ID: 506b6085ab7e
Revises: 3dc629766bfe
Create Date: 2025-07-13 19:29:54.220958

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "506b6085ab7e"
down_revision: Union[str, Sequence[str], None] = "3dc629766bfe"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(
        op.f("ix_matching_option_correct_pairs_left_option_id"),
        table_name="matching_option_correct_pairs",
    )
    op.drop_index(
        op.f("ix_matching_option_correct_pairs_question_id"),
        table_name="matching_option_correct_pairs",
    )
    op.drop_index(
        op.f("ix_matching_option_correct_pairs_right_option_id"),
        table_name="matching_option_correct_pairs",
    )
    op.drop_table("matching_option_correct_pairs")
    op.drop_column("options", "is_left")
    op.drop_column("options", "is_right")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "options",
        sa.Column("is_right", sa.BOOLEAN(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "options",
        sa.Column("is_left", sa.BOOLEAN(), autoincrement=False, nullable=True),
    )
    op.create_table(
        "matching_option_correct_pairs",
        sa.Column("question_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("left_option_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("right_option_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["left_option_id"],
            ["options.id"],
            name=op.f("matching_option_correct_pairs_left_option_id_fkey"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["question_id"],
            ["questions.id"],
            name=op.f("matching_option_correct_pairs_question_id_fkey"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["right_option_id"],
            ["options.id"],
            name=op.f("matching_option_correct_pairs_right_option_id_fkey"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("matching_option_correct_pairs_pkey")),
    )
    op.create_index(
        op.f("ix_matching_option_correct_pairs_right_option_id"),
        "matching_option_correct_pairs",
        ["right_option_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_matching_option_correct_pairs_question_id"),
        "matching_option_correct_pairs",
        ["question_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_matching_option_correct_pairs_left_option_id"),
        "matching_option_correct_pairs",
        ["left_option_id"],
        unique=False,
    )
    # ### end Alembic commands ###
